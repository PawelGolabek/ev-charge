import type { Page, PlaywrightTestArgs, PlaywrightTestOptions, PlaywrightWorkerArgs, PlaywrightWorkerOptions } from '@playwright/test';
import { defineWalletSetup } from '@synthetixio/synpress-core';
import { type Anvil, type CreateAnvilOptions } from '@viem/anvil';
type UnlockWalletFunction = (walletPage: Page, password: string) => Promise<void>;
type PublicSynpressFixtures = {
    extensionId: string;
    metamaskPage: Page;
    createAnvilNode: (options?: CreateAnvilOptions) => Promise<{
        anvil: Anvil;
        rpcUrl: string;
        chainId: number;
    }>;
};
export declare const testWithSynpress: (walletSetup: ReturnType<typeof defineWalletSetup>, unlockWallet: UnlockWalletFunction, slowMo?: number) => import("@playwright/test").TestType<PlaywrightTestArgs & PlaywrightTestOptions & PublicSynpressFixtures, PlaywrightWorkerArgs & PlaywrightWorkerOptions>;
export {};
//# sourceMappingURL=testWithSynpress.d.ts.map